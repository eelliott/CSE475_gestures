
//my demo code here
//
//
//
// this is eather ambiant or active rain        //Alter timing as nessisary currently assuming one cycle = 1ms
byte rainDropState[16];
byte rainShineState[16];
byte rainDropSize[16];
byte rainShineSize[16];
void rainCycle(uint8_t wait) {
  uint16_t i;
  


  for(i = 0; i < 16; i++){
    Rain((rainDropState + i), (rainShineState + i), (rainDropSize + i), (rainShineSize + i)); 
  }
  //if this is a neopixal with white
  for(i = 0; i < 16; i++){
    strip.setPixelColor(i, strip.Color(0, 0, *(rainDropSize + i) - *(rainShineSize + i), *(rainShineSize + i)));
  }
  /*if this is a neopixal without white
  for(i = 0; i < 16; i++){
    strip.setPixelColor(i, strip.Color(*(rainShineSize + i), *(rainShineSize + i), *(rainDropSize + i)));
  } 
  */
  
  strip.show();
  delay(wait);
}

void Rain(byte* a1, byte* b1, byte* t1, byte* w1) {
  int spRate = 1;
  if((*a1 != 0) || (*a1 != 1) || (*a1 != 2)){
    *a1 = 0;
  }
  if((*b1 != 0) || (*b1 != 1) || (*b1 != 2)){
    *b1 = 0;
  }
  if((*t1 < 0) || (*t1 > 255)){
    *t1 = 0;
  }
  if((*w1 < 0)  || (*w1 > 255)){
    *w1 = 0;
  }
  
  if (*a1 == 0){
    if(random(500000) < 100 * spRate)){
      *a1 = 1;
      *t1 = 0;
    }
  }else{
    if(*a1 == 1){
      if(random(400) < 100 * spRate){
        *t1 = *t1 + 1;
        if(*t1 > 250){
          *a1 = 2;
          *b1 = 1;
          *w1 = 0;
        }
      }
        
    }else if(*a1 == 2){
      if(random(3200) < 100 * spRate){
        *t1 = *t1 - 1;
        if(*b1 == 1){
          if(random(400) < 100 * spRate){
            *w1 = *w1 + 1;
            if(*w1 > *t1){
              *b1 = 2;
            }
          }
        }else if(*b1 == 2){
          if(random(800) <= 100 * spRate){
            *w1 = *w1 - 1;
            if(*w1 < 2){
              *b1 = 0;
            }
          }
        }
        if(t1 < 2){
          *t1 = 0;
          *a1 = 0;
          *b1 = 0;
          *w1 = 0;
        }
      }
    }
  }
}

//
//
//
// this is a startle code
void crazed(uint8_t wait){
  uint16_t i;
  byte R, G;


  for(i = 0; i < 16; i++){
    if(random(500) == 0){
      R = 255;
      G = random(255);
    }else{
      R = 0;
      G = 0;
    }
    strip.setPixelColor(i, strip.Color(R, G, 0));
  }
  strip.show();
  delay(wait);
}

//
//
//
// this is a 2nd ambiant/active code
void randomspiral(uint8_t wait){
  uint16_t i, j;
  static byte R = 100, G = 100, B = 100;
  byte a;
  
  a = random(10);
  if(R > 10){
    R = R - a;
  }
  a = random(10);
  if(R < 245){
    R = R + a;
  }

  a = random(10);
  if(G > 10){
    G = G - a;
  }
  a = random(10);
  if(G < 245){
    G = G + a;
  }

  a = random(10);
  if(B > 10){
    B = B - a;
  }
  a = random(10);
  if(B < 245){
    B = B + a;
  }

  for(i = 0; i < 16; i++){
    for(j = 0; j < 16; j++){
      strip.setPixelColor(i, strip.Color((R * j / 15), (G * j / 15), (B * j / 15)));
    }
    strip.show();
    delay(wait);
  }
}

//
//
//
// this is a 3rd ambiant/active code
void alternate(uint8_t wait){
  uint16_t i, j;
  byte a = 0, b = 0;
  
  byte g = 0, PratioR = 0, PratioG = 0, PratioB = 0;
  //for random colors instead of white set g to 1;
  if(g == 1){
    PratioR = random(1, 10);
    PratioG = random(1, 10);
    PratioB = random(1, 10);
  }else{
    PratioR = 1;
    PratioG = 1;
    PratioB = 1;
  }
  

  for(i = 0; i < 25; i++){
    a = a + 10;
    b = 250 - a;
    for(j = 0; j < 8; j++){
      strip.setPixelColor(j, strip.Color(a / PratioR, a / PratioG, a / PratioB));
      strip.setPixelColor(j + 1, strip.Color(b / PratioR, b / PratioG, b / PratioB));
    }
    strip.show();
    delay(wait);
  }

  for(i = 0; i < 25; i++){
    a = a + 10;
    b = 250 - a;
    for(j = 0; j < 8; j++){
      strip.setPixelColor(j, strip.Color(b / PratioR, b / PratioG, b / PratioB));
      strip.setPixelColor(j + 1, strip.Color(a / PratioR, a / PratioG, a / PratioB));
    }
    strip.show();
    delay(wait);
  }
}